name: Build C++ ARM Docker image

# Controls when the workflow will run
on:
    # Triggers the workflow on push or pull request events but only for the "master" branch
    push:
        branches: ["master"]
    pull_request:
        branches: ["master"]

    # Allows you to run this workflow manually from the Actions tab
    workflow_dispatch:

env:
    REGISTRY: ghcr.io
    IMAGE_NAME: ${{ github.repository }}/cpp-dev-arm_64_img

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
    build-and-push-image:
        # The type of runner that the job will run on
        runs-on: ubuntu-latest

        # Sets the permissions granted to the GITHUB_TOKEN for the actions in this job.
        permissions:
            contents: read
            packages: write
            attestations: write
            id-token: write

        # Steps represent a sequence of tasks that will be executed as part of the job
        steps:
            # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
            - uses: actions/checkout@v4

            - name: Log in to the Container registry
              uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}
            # This step uses [docker/metadata-action](https://github.com/docker/metadata-action#about) to extract tags and labels that will be applied to the specified image. The `id` "meta" allows the output of this step to be referenced in a subsequent step. The `images` value provides the base name for the tags and labels.
            - name: Extract metadata (tags, labels) for Docker
              id: meta
              uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
              with:
                  images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
            - name: Set up QEMU
              uses: docker/setup-qemu-action@v3
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3
            - name: Build and push ARM Docker image
              id: push
              uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
              with:
                  context: ./docker
                  file: ./docker/Dockerfile_cpp
                  platforms: linux/arm64
                  push: true
                  tags: |
                      ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:1.0
                  labels: ${{ steps.meta.outputs.labels }}

            # This step generates an artifact attestation for the image, which is an unforgeable statement about where and how it was built. It increases supply chain security for people who consume the image. For more information, see [AUTOTITLE](/actions/security-guides/using-artifact-attestations-to-establish-provenance-for-builds).
            - name: test
              run: env
            - name: Generate artifact attestation
              uses: actions/attest-build-provenance@v2
              with:
                  subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
                  subject-digest: ${{ steps.push.outputs.digest }}
                  push-to-registry: true
